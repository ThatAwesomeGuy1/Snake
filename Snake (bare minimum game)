import pygame
import random
pygame.init()
random.randint(0, 50)
x = random.randint(0, 50)
y = random.randint(0, 50)
DIS_WIDTH = 1280
DIS_HEIGHT = 720
screen = pygame.display.set_mode([1670,1699])
pygame.display.set_caption("SNAKE")
clock = pygame.time.Clock()
GREEN = (0, 255, 0)
RED = (255, 0, 0)

class snake:
  def __init__(self, size, screen, loc):
    self.size = size
    self.color = (0,255,0)
    self.screen = screen
    self.loc = loc
    self.velocity = [0,0]
    self.body = [pygame.Rect(self.loc[0], self.loc[1], self.size, self.size)]
  
  def checkcollision(self, apple):
    if self.body[0].colliderect(apple.body):
      return True
    else:
      return False
  
  def grow(self):

    tail = self.body[-1]
    new_segment = pygame.Rect(tail.x, tail.y, self.size, self.size)
    self.body.append(new_segment)

class apple:
  def __init__(self, size, screen, loc):
    self.size = size
    self.color = (255,0,0)
    self.screen = screen
    self.loc = loc
    self.body = pygame.Rect(self.loc[0], self.loc[1], self.size, self.size)
  
  def randomizeloc(self, snake_body):
    while True:
      x = random.randint(0, (DIS_WIDTH - self.size) // self.size) * self.size
      y = random.randint(0, (DIS_HEIGHT - self.size) // self.size) * self.size
      self.loc = [x, y]
      self.body = pygame.Rect(x, y, self.size, self.size)
 
      collision = False
      for segment in snake_body:
        if self.body.colliderect(segment):
          collision = True
          break
      
      if not collision:
        break

snake_obj = snake(20, screen, [100, 100])
apple_obj = apple(20, screen, [200, 200])

running = True
while running:
  for event in pygame.event.get():
    if event.type == pygame.QUIT:
      running = False
    elif event.type == pygame.KEYDOWN:
      if event.key == pygame.K_UP:
        snake_obj.velocity = [0, -20]
      elif event.key == pygame.K_DOWN:
        snake_obj.velocity = [0, 20]
      elif event.key == pygame.K_LEFT:
        snake_obj.velocity = [-20, 0]
      elif event.key == pygame.K_RIGHT:
        snake_obj.velocity = [20, 0]
      if event.key == pygame.K_w:
        snake_obj.velocity = [0, -20]
      elif event.key == pygame.K_a:
        snake_obj.velocity = [-20, 0]
      elif event.key == pygame.K_s:
        snake_obj.velocity = [0, 20]
      elif event.key == pygame.K_d:
        snake_obj.velocity = [20, 0]
  
  head = snake_obj.body[0]
  new_head = pygame.Rect(
      head.x + snake_obj.velocity[0],
      head.y + snake_obj.velocity[1],
      snake_obj.size,
      snake_obj.size
  )
  snake_obj.body.insert(0, new_head)
  snake_obj.body.pop() 
  

  if (new_head.x < 0 or new_head.x >= DIS_WIDTH or 
      new_head.y < 0 or new_head.y >= DIS_HEIGHT):
      running = False
      break
  
  if snake_obj.checkcollision(apple_obj):
      snake_obj.grow()
      apple_obj.randomizeloc(snake_obj.body)
  
  
  screen.fill((0, 0, 0))
  
  for segment in snake_obj.body:
      pygame.draw.rect(screen, snake_obj.color, segment)
  
  pygame.draw.rect(screen, apple_obj.color, apple_obj.body)
  
  pygame.display.flip()
  clock.tick(10)  

pygame.quit()

